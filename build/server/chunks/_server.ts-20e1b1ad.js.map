{"version":3,"file":"_server.ts-20e1b1ad.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/conversation/_id_/_server.ts.js"],"sourcesContent":["import { W as WEBSEARCH_ALLOWLIST, a as WEBSEARCH_BLOCKLIST, c as collections, M as MESSAGES_BEFORE_LOGIN } from \"../../../../chunks/database.js\";\nimport { s as sha256, a as authCondition, r as requiresUser } from \"../../../../chunks/auth.js\";\nimport { s as smallModel, m as models } from \"../../../../chunks/models.js\";\nimport \"../../../../chunks/errors.js\";\nimport { e as error } from \"../../../../chunks/index.js\";\nimport { ObjectId } from \"mongodb\";\nimport { z } from \"zod\";\nimport \"serpapi\";\nimport { VirtualConsole, JSDOM } from \"jsdom\";\nimport { format } from \"date-fns\";\nimport { dot, pipeline } from \"@xenova/transformers\";\nimport { setTimeout as setTimeout$1 } from \"node:timers/promises\";\nimport sizeof from \"image-size\";\nvar WebSearchProvider = /* @__PURE__ */ ((WebSearchProvider2) => {\n  WebSearchProvider2[\"GOOGLE\"] = \"Google\";\n  WebSearchProvider2[\"YOU\"] = \"You.com\";\n  return WebSearchProvider2;\n})(WebSearchProvider || {});\nfunction getWebSearchProvider() {\n  return WebSearchProvider.GOOGLE;\n}\nasync function searchWeb(query) {\n  throw new Error(\"No You.com or Serper.dev or SerpAPI key found\");\n}\nasync function generateFromDefaultEndpoint({\n  messages,\n  preprompt\n}) {\n  const endpoint = await smallModel.getEndpoint();\n  const tokenStream = await endpoint({ conversation: { messages, preprompt } });\n  for await (const output of tokenStream) {\n    if (output.generated_text) {\n      let generated_text = output.generated_text;\n      for (const stop of [...smallModel.parameters?.stop ?? [], \"<|endoftext|>\"]) {\n        if (generated_text.endsWith(stop)) {\n          generated_text = generated_text.slice(0, -stop.length).trimEnd();\n        }\n      }\n      return generated_text;\n    }\n  }\n  throw new Error(\"Generation failed\");\n}\nconst listSchema = z.array(z.string()).default([]);\nconst allowList = listSchema.parse(JSON.parse(WEBSEARCH_ALLOWLIST));\nconst blockList = listSchema.parse(JSON.parse(WEBSEARCH_BLOCKLIST));\nconst queryModifier = [\n  ...allowList.map((item) => \"site:\" + item),\n  ...blockList.map((item) => \"-site:\" + item)\n].join(\" \");\nasync function generateQuery(messages) {\n  const currentDate = format(/* @__PURE__ */ new Date(), \"MMMM d, yyyy\");\n  const userMessages = messages.filter(({ from }) => from === \"user\");\n  const previousUserMessages = userMessages.slice(0, -1);\n  const lastMessage = userMessages.slice(-1)[0];\n  const convQuery = [\n    {\n      from: \"user\",\n      content: `Previous Questions:\n- Who is the president of France?\n\nCurrent Question: What about Mexico?\n`\n    },\n    {\n      from: \"assistant\",\n      content: \"President of Mexico\"\n    },\n    {\n      from: \"user\",\n      content: `Previous questions: \n- When is the next formula 1 grand prix?\n\nCurrent Question: Where is it being hosted ?`\n    },\n    {\n      from: \"assistant\",\n      content: \"location of next formula 1 grand prix\"\n    },\n    {\n      from: \"user\",\n      content: \"Current Question: What type of printhead does the Epson F2270 DTG printer use?\"\n    },\n    {\n      from: \"assistant\",\n      content: \"Epson F2270 DTG printer printhead\"\n    },\n    { from: \"user\", content: \"What were the news yesterday ?\" },\n    {\n      from: \"assistant\",\n      content: `news ${format(new Date(Date.now() - 864e5), \"MMMM d, yyyy\")}`\n    },\n    { from: \"user\", content: \"What is the current weather in Paris ?\" },\n    { from: \"assistant\", content: `weather in Paris ${currentDate}` },\n    {\n      from: \"user\",\n      content: (previousUserMessages.length > 0 ? `Previous questions: \n${previousUserMessages.map(({ content }) => `- ${content}`).join(\"\\n\")}` : \"\") + \"\\n\\nCurrent Question:\" + lastMessage.content\n    }\n  ];\n  const webQuery = await generateFromDefaultEndpoint({\n    messages: convQuery,\n    preprompt: `You are tasked with generating web search queries. Give me an appropriate query to answer my question for google search. Answer with only the query. Today is ${currentDate}`\n  });\n  return (queryModifier + \" \" + webQuery).trim();\n}\nasync function parseWeb(url) {\n  const abortController = new AbortController();\n  setTimeout(() => abortController.abort(), 1e4);\n  const htmlString = await fetch(url, { signal: abortController.signal }).then((response) => response.text()).catch();\n  const virtualConsole = new VirtualConsole();\n  virtualConsole.on(\"error\", () => {\n  });\n  const dom = new JSDOM(htmlString ?? \"\", {\n    virtualConsole\n  });\n  const { document } = dom.window;\n  const textElTags = \"p\";\n  const paragraphs = document.querySelectorAll(textElTags);\n  if (!paragraphs.length) {\n    throw new Error(`webpage doesn't have any \"${textElTags}\" element`);\n  }\n  const paragraphTexts = Array.from(paragraphs).map((p) => p.textContent);\n  const text = paragraphTexts.join(\" \").replace(/ {2}|\\r\\n|\\n|\\r/gm, \"\");\n  return text;\n}\nfunction chunk(arr, chunkSize) {\n  if (isNaN(chunkSize) || chunkSize < 1) {\n    throw new RangeError(\"Invalid chunk size: \" + chunkSize);\n  }\n  if (!arr.length) {\n    return [];\n  }\n  if (arr.length <= chunkSize) {\n    return [arr];\n  }\n  return range(Math.ceil(arr.length / chunkSize)).map((i) => {\n    return arr.slice(i * chunkSize, (i + 1) * chunkSize);\n  });\n}\nfunction range(n, b) {\n  return b ? Array(b - n).fill(0).map((_, i) => n + i) : Array(n).fill(0).map((_, i) => i);\n}\nfunction innerProduct(tensor1, tensor2) {\n  return 1 - dot(tensor1.data, tensor2.data);\n}\nclass PipelineSingleton {\n  static async getInstance() {\n    if (this.instance === null) {\n      this.instance = pipeline(\"feature-extraction\", this.modelId);\n    }\n    return this.instance;\n  }\n}\nPipelineSingleton.modelId = \"Xenova/gte-small\";\nPipelineSingleton.instance = null;\nconst MAX_SEQ_LEN = 512;\nasync function findSimilarSentences(query, sentences, { topK = 5 }) {\n  const input = [query, ...sentences];\n  const extractor = await PipelineSingleton.getInstance();\n  const output = await extractor(input, { pooling: \"mean\", normalize: true });\n  const queryTensor = output[0];\n  const sentencesTensor = output.slice([1, input.length - 1]);\n  const distancesFromQuery = [...sentencesTensor].map(\n    (sentenceTensor, index) => {\n      return {\n        distance: innerProduct(queryTensor, sentenceTensor),\n        index\n      };\n    }\n  );\n  distancesFromQuery.sort((a, b) => {\n    return a.distance - b.distance;\n  });\n  return distancesFromQuery.slice(0, topK).map((item) => item.index);\n}\nconst MAX_N_PAGES_SCRAPE = 10;\nconst MAX_N_PAGES_EMBED = 5;\nconst DOMAIN_BLOCKLIST = [\"youtube.com\", \"twitter.com\"];\nasync function runWebSearch(conv, prompt, updatePad) {\n  const messages = (() => {\n    return [...conv.messages, { content: prompt, from: \"user\", id: crypto.randomUUID() }];\n  })();\n  const webSearch = {\n    prompt,\n    searchQuery: \"\",\n    results: [],\n    context: \"\",\n    contextSources: [],\n    createdAt: /* @__PURE__ */ new Date(),\n    updatedAt: /* @__PURE__ */ new Date()\n  };\n  function appendUpdate(message, args, type) {\n    updatePad({ type: \"webSearch\", messageType: type ?? \"update\", message, args });\n  }\n  try {\n    webSearch.searchQuery = await generateQuery(messages);\n    const searchProvider = getWebSearchProvider();\n    appendUpdate(`Searching ${searchProvider}`, [webSearch.searchQuery]);\n    const results = await searchWeb(webSearch.searchQuery);\n    webSearch.results = (results.organic_results && results.organic_results.map((el) => {\n      const { title, link, text } = el;\n      const { hostname } = new URL(link);\n      return { title, link, hostname, text };\n    })) ?? [];\n    webSearch.results = webSearch.results.filter(({ link }) => !DOMAIN_BLOCKLIST.some((el) => link.includes(el))).slice(0, MAX_N_PAGES_SCRAPE);\n    let paragraphChunks = [];\n    if (webSearch.results.length > 0) {\n      appendUpdate(\"Browsing results\");\n      const promises = webSearch.results.map(async (result) => {\n        const { link } = result;\n        let text = result.text ?? \"\";\n        if (!text) {\n          try {\n            text = await parseWeb(link);\n            appendUpdate(\"Browsing webpage\", [link]);\n          } catch (e) {\n          }\n        }\n        const MAX_N_CHUNKS = 100;\n        const texts2 = chunk(text, MAX_SEQ_LEN).slice(0, MAX_N_CHUNKS);\n        return texts2.map((t) => ({ source: result, text: t }));\n      });\n      const nestedParagraphChunks = (await Promise.all(promises)).slice(0, MAX_N_PAGES_EMBED);\n      paragraphChunks = nestedParagraphChunks.flat();\n      if (!paragraphChunks.length) {\n        throw new Error(\"No text found on the first 5 results\");\n      }\n    } else {\n      throw new Error(\"No results found for this search query\");\n    }\n    appendUpdate(\"Extracting relevant information\");\n    const topKClosestParagraphs = 8;\n    const texts = paragraphChunks.map(({ text }) => text);\n    const indices = await findSimilarSentences(prompt, texts, {\n      topK: topKClosestParagraphs\n    });\n    webSearch.context = indices.map((idx) => texts[idx]).join(\"\");\n    const usedSources = /* @__PURE__ */ new Set();\n    for (const idx of indices) {\n      const { source } = paragraphChunks[idx];\n      if (!usedSources.has(source.link)) {\n        usedSources.add(source.link);\n        webSearch.contextSources.push(source);\n      }\n    }\n    updatePad({\n      type: \"webSearch\",\n      messageType: \"sources\",\n      message: \"sources\",\n      sources: webSearch.contextSources\n    });\n  } catch (searchError) {\n    if (searchError instanceof Error) {\n      appendUpdate(\n        \"An error occurred with the web search\",\n        [JSON.stringify(searchError.message)],\n        \"error\"\n      );\n    }\n  }\n  return webSearch;\n}\nlet closed = false;\nprocess.on(\"SIGINT\", () => {\n  closed = true;\n});\nlet abortedGenerations = /* @__PURE__ */ new Map();\nasync function maintainAbortedGenerations() {\n  while (!closed) {\n    await setTimeout$1(1e3);\n    try {\n      const aborts = await collections.abortedGenerations.find({}).sort({ createdAt: 1 }).toArray();\n      abortedGenerations = new Map(\n        aborts.map(({ conversationId, createdAt }) => [conversationId.toString(), createdAt])\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}\nmaintainAbortedGenerations();\nasync function summarize(prompt) {\n  const messages = [\n    { from: \"user\", content: \"Who is the president of Gabon?\" },\n    { from: \"assistant\", content: \"🇬🇦 President of Gabon\" },\n    { from: \"user\", content: \"Who is Julien Chaumond?\" },\n    { from: \"assistant\", content: \"🧑 Julien Chaumond\" },\n    { from: \"user\", content: \"what is 1 + 1?\" },\n    { from: \"assistant\", content: \"🔢 Simple math operation\" },\n    { from: \"user\", content: \"What are the latest news?\" },\n    { from: \"assistant\", content: \"📰 Latest news\" },\n    { from: \"user\", content: \"How to make a great cheesecake?\" },\n    { from: \"assistant\", content: \"🍰 Cheesecake recipe\" },\n    { from: \"user\", content: \"what is your favorite movie? do a short answer.\" },\n    { from: \"assistant\", content: \"🎥 Favorite movie\" },\n    { from: \"user\", content: \"Explain the concept of artificial intelligence in one sentence\" },\n    { from: \"assistant\", content: \"🤖 AI definition\" },\n    { from: \"user\", content: prompt }\n  ];\n  return await generateFromDefaultEndpoint({\n    messages,\n    preprompt: `You are a summarization AI. You'll never answer a user's question directly, but instead summarize the user's request into a single short sentence of four words or less. Always start your answer with an emoji relevant to the summary.`\n  }).then((summary) => {\n    if (!/\\p{Emoji}/u.test(summary.slice(0, 3))) {\n      return \"💬 \" + summary;\n    }\n    return summary;\n  }).catch((e) => {\n    console.error(e);\n    return null;\n  });\n}\nasync function uploadFile(file, conv) {\n  const sha = await sha256(await file.text());\n  const upload = collections.bucket.openUploadStream(`${conv._id}-${sha}`, {\n    metadata: { conversation: conv._id.toString(), mime: \"image/jpeg\" }\n  });\n  upload.write(await file.arrayBuffer());\n  upload.end();\n  return new Promise((resolve, reject) => {\n    upload.once(\"finish\", () => resolve(sha));\n    upload.once(\"error\", reject);\n    setTimeout(() => reject(new Error(\"Upload timed out\")), 1e4);\n  });\n}\nasync function POST({ request, locals, params, getClientAddress }) {\n  const id = z.string().parse(params.id);\n  const convId = new ObjectId(id);\n  const promptedAt = /* @__PURE__ */ new Date();\n  const userId = locals.user?._id ?? locals.sessionId;\n  if (!userId) {\n    throw error(401, \"Unauthorized\");\n  }\n  const conv = await collections.conversations.findOne({\n    _id: convId,\n    ...authCondition(locals)\n  });\n  if (!conv) {\n    throw error(404, \"Conversation not found\");\n  }\n  await collections.messageEvents.insertOne({\n    userId,\n    createdAt: /* @__PURE__ */ new Date(),\n    ip: getClientAddress()\n  });\n  if (!locals.user?._id && requiresUser && 0 > 0) {\n    const totalMessages = (await collections.conversations.aggregate([\n      { $match: authCondition(locals) },\n      { $project: { messages: 1 } },\n      { $unwind: \"$messages\" },\n      { $match: { \"messages.from\": \"assistant\" } },\n      { $count: \"messages\" }\n    ]).toArray())[0]?.messages ?? 0;\n    if (totalMessages > parseInt(MESSAGES_BEFORE_LOGIN)) {\n      throw error(429, \"Exceeded number of messages before login\");\n    }\n  }\n  Math.max(\n    await collections.messageEvents.countDocuments({ userId }),\n    await collections.messageEvents.countDocuments({ ip: getClientAddress() })\n  );\n  const model = models.find((m) => m.id === conv.model);\n  if (!model) {\n    throw error(410, \"Model not available anymore\");\n  }\n  const json = await request.json();\n  const {\n    inputs: newPrompt,\n    response_id: responseId,\n    id: messageId,\n    is_retry,\n    web_search: webSearch,\n    files: b64files\n  } = z.object({\n    inputs: z.string().trim().min(1),\n    id: z.optional(z.string().uuid()),\n    response_id: z.optional(z.string().uuid()),\n    is_retry: z.optional(z.boolean()),\n    web_search: z.optional(z.boolean()),\n    files: z.optional(z.array(z.string()))\n  }).parse(json);\n  const files = b64files?.map((file) => {\n    const blob = Buffer.from(file, \"base64\");\n    return new File([blob], \"image.png\");\n  });\n  if (files) {\n    const filechecks = await Promise.all(\n      files.map(async (file) => {\n        const dimensions = sizeof(Buffer.from(await file.arrayBuffer()));\n        return file.size > 2 * 1024 * 1024 || (dimensions.width ?? 0) > 224 || (dimensions.height ?? 0) > 224;\n      })\n    );\n    if (filechecks.some((check) => check)) {\n      throw error(413, \"File too large, should be <2MB and 224x224 max.\");\n    }\n  }\n  let hashes;\n  if (files) {\n    hashes = await Promise.all(files.map(async (file) => await uploadFile(file, conv)));\n  }\n  let messages = (() => {\n    if (is_retry && messageId) {\n      let retryMessageIdx = conv.messages.findIndex((message) => message.id === messageId);\n      if (retryMessageIdx === -1) {\n        retryMessageIdx = conv.messages.length;\n      }\n      return [\n        ...conv.messages.slice(0, retryMessageIdx),\n        {\n          content: newPrompt,\n          from: \"user\",\n          id: messageId,\n          updatedAt: /* @__PURE__ */ new Date(),\n          files: conv.messages[retryMessageIdx]?.files\n        }\n      ];\n    }\n    return [\n      ...conv.messages,\n      {\n        content: newPrompt,\n        from: \"user\",\n        id: messageId || crypto.randomUUID(),\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        files: hashes\n      }\n    ];\n  })();\n  await collections.conversations.updateOne(\n    {\n      _id: convId\n    },\n    {\n      $set: {\n        messages,\n        title: conv.title,\n        updatedAt: /* @__PURE__ */ new Date()\n      }\n    }\n  );\n  const stream = new ReadableStream({\n    async start(controller) {\n      const updates = [];\n      function update(newUpdate) {\n        if (newUpdate.type !== \"stream\") {\n          updates.push(newUpdate);\n        }\n        if (newUpdate.type === \"stream\" && newUpdate.token === \"\") {\n          return;\n        }\n        controller.enqueue(JSON.stringify(newUpdate) + \"\\n\");\n        if (newUpdate.type === \"finalAnswer\") {\n          controller.enqueue(\" \".repeat(4096));\n        }\n      }\n      update({ type: \"status\", status: \"started\" });\n      const summarizeIfNeeded = (async () => {\n        if (conv.title === \"New Chat\" && messages.length === 1) {\n          try {\n            conv.title = await summarize(newPrompt) ?? conv.title;\n            update({ type: \"status\", status: \"title\", message: conv.title });\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      })();\n      await collections.conversations.updateOne(\n        {\n          _id: convId\n        },\n        {\n          $set: {\n            messages,\n            title: conv.title,\n            updatedAt: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      let webSearchResults;\n      if (webSearch) {\n        webSearchResults = await runWebSearch(conv, newPrompt, update);\n      }\n      messages[messages.length - 1].webSearch = webSearchResults;\n      conv.messages = messages;\n      try {\n        const endpoint = await model.getEndpoint();\n        for await (const output of await endpoint({ conversation: conv })) {\n          if (!output.generated_text) {\n            if (!output.token.special) {\n              update({\n                type: \"stream\",\n                token: output.token.text\n              });\n              const lastMessage = messages[messages.length - 1];\n              if (lastMessage?.from !== \"assistant\") {\n                messages = [\n                  ...messages,\n                  // id doesn't match the backend id but it's not important for assistant messages\n                  // First token has a space at the beginning, trim it\n                  {\n                    from: \"assistant\",\n                    content: output.token.text.trimStart(),\n                    webSearch: webSearchResults,\n                    updates,\n                    id: responseId || crypto.randomUUID(),\n                    createdAt: /* @__PURE__ */ new Date(),\n                    updatedAt: /* @__PURE__ */ new Date()\n                  }\n                ];\n              } else {\n                const date = abortedGenerations.get(convId.toString());\n                if (date && date > promptedAt) {\n                  break;\n                }\n                if (!output) {\n                  break;\n                }\n                lastMessage.content += output.token.text;\n              }\n            }\n          } else {\n            messages = [\n              ...messages.slice(0, -1),\n              {\n                ...messages[messages.length - 1],\n                content: output.generated_text,\n                updates,\n                updatedAt: /* @__PURE__ */ new Date()\n              }\n            ];\n          }\n        }\n      } catch (e) {\n        update({ type: \"status\", status: \"error\", message: e.message });\n      }\n      await collections.conversations.updateOne(\n        {\n          _id: convId\n        },\n        {\n          $set: {\n            messages,\n            title: conv?.title,\n            updatedAt: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      update({\n        type: \"finalAnswer\",\n        text: messages[messages.length - 1].content\n      });\n      await summarizeIfNeeded;\n      return;\n    },\n    async cancel() {\n      await collections.conversations.updateOne(\n        {\n          _id: convId\n        },\n        {\n          $set: {\n            messages,\n            title: conv.title,\n            updatedAt: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n    }\n  });\n  return new Response(stream);\n}\nasync function DELETE({ locals, params }) {\n  const convId = new ObjectId(params.id);\n  const conv = await collections.conversations.findOne({\n    _id: convId,\n    ...authCondition(locals)\n  });\n  if (!conv) {\n    throw error(404, \"Conversation not found\");\n  }\n  await collections.conversations.deleteOne({ _id: conv._id });\n  return new Response();\n}\nasync function PATCH({ request, locals, params }) {\n  const { title } = z.object({ title: z.string().trim().min(1).max(100) }).parse(await request.json());\n  const convId = new ObjectId(params.id);\n  const conv = await collections.conversations.findOne({\n    _id: convId,\n    ...authCondition(locals)\n  });\n  if (!conv) {\n    throw error(404, \"Conversation not found\");\n  }\n  await collections.conversations.updateOne(\n    {\n      _id: convId\n    },\n    {\n      $set: {\n        title\n      }\n    }\n  );\n  return new Response();\n}\nexport {\n  DELETE,\n  PATCH,\n  POST\n};\n"],"names":[],"mappings":"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"}